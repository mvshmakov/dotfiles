#!/usr/bin/env bash

# () function body creates a subshell to have `set -x` only in the subshell
# https://stackoverflow.com/a/74525211
function update-all() (
	set -x

	brew update
	brew upgrade

	asdf plugin update --all
	gh extension upgrade --all
	# As zimfw uses the shell script under the hood, `-x` option will print all
	# lines and pollute the output. So, using the `+x` and updating in the subshell
	(set +x && zimfw update && zimfw upgrade)

	"$XDG_CONFIG_HOME"/tmux/plugins/tpm/bin/update_plugins all

	# Update Lazy packages and exit on LazySync event
	nvim --headless -c 'autocmd User LazySync quitall' -c 'Lazy sync'
	# Update Mason packages and quit
	nvim --headless -c 'autocmd User MasonUpdateAllComplete quitall' -c 'MasonUpdate' -c 'MasonUpdateAll'
	# Updates TS parsers as well
	nvim --headless -c 'TSUpdateSync' -c q
)

function clean-all() (
	set -x

	brew cleanup
	brew autoremove
)

function doctor-all() (
	set -x

    local dotfiles_dir="$HOME/projects/personal/dotfiles"
    local main_branch="main"

    cd "${dotfiles_dir}" || return 1
    echo "Checking repo: git fetch && git rev-list HEAD..origin/${main_branch}"
    git fetch
    if [ "$(git rev-list HEAD..origin/${main_branch} --count)" -gt 0 ]; then
        echo "Repo behind upstream. Please run: git pull"
        return 1
    fi
	
    nvim --headless -c "checkhealth" -c q

	brew doctor
)

# Create a directory and enter in it
function mkd() {
	mkdir -p "$@" && cd "$@" || exit
}
