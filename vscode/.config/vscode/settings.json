{
  /** Editor settings */
  "editor.fontFamily": "FiraCode Nerd Font Mono",
  "editor.fontLigatures": true,
  "editor.suggestSelection": "first",
  "editor.linkedEditing": true,
  "editor.hover.enabled": true,
  "editor.bracketPairColorization.enabled": true,
  "editor.inlineSuggest.enabled": true,
  "editor.unicodeHighlight.ambiguousCharacters": true,
  "editor.stickyScroll.enabled": true,
  // Takes the space, not really useful
  "editor.minimap.enabled": false,
  "eslint.format.enable": true,
  "editor.formatOnPaste": true,
  "editor.formatOnType": true,
  "editor.formatOnSave": true,
  "editor.formatOnSaveMode": "modificationsIfAvailable",
  "editor.codeActionsOnSave": {
    "source.fixAll": true
  },
  /** File-specific settings */
  // Optional but recommended for eslint-prettier
  "files.autoSave": "onFocusChange",
  "files.associations": {
    "config": "gitconfig",
    "tmux.conf": "tmux",
    "inputrc": "shellscript",
    "gitmessage": "plaintext",
    "*.nix": "nix",
    "*.sh": "shellscript"
  },
  "files.exclude": {
    "**/.git": false,
    "**/.hg": false,
    "**/.svn": false
  },
  /** Language-specific settings */
  "[typescriptreact][typescript][javascriptreact][javascript]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint",
  },
  "[json][jsonc][yaml]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[python]": {
    "editor.defaultFormatter": "ms-python.python",
    // Fixes for black formatter
    // https://stackoverflow.com/questions/62427817/black-does-not-support-format-selection-command-vs-code-error
    "editor.formatOnSaveMode": "file"
  },
  "[shellscript]": {
    "editor.defaultFormatter": "foxundermoon.shell-format"
  },
  "[html]": {
    "editor.defaultFormatter": "vscode.html-language-features"
  },
  "[markdown]": {
    "editor.defaultFormatter": "DavidAnson.vscode-markdownlint"
  },
  "[lua]": {
    "editor.defaultFormatter": "JohnnyMorganz.stylua"
  },
  "[dockerfile]": {
    "editor.defaultFormatter": "ms-azuretools.vscode-docker"
  },
  "[postcss][css]": {
    "editor.defaultFormatter": "stylelint.vscode-stylelint"
  },
  /** Frontend tooling settings */
  "jest.autoRevealOutput": "on-run",
  "jest.autoRun": "on-save",
  "typescript.updateImportsOnFileMove.enabled": "always",
  "eslint.debug": true,
  "svg.preview.background": "transparent",
  "figma.autocompleteBlocks": true,
  /** Python tooling settings */
  "python.linting.enabled": true,
  "python.linting.flake8Enabled": true,
  "python.formatting.provider": "black",
  "python.languageServer": "Pylance",
  "python.envFile": "${workspaceFolder}/.envrc",
  "dvc.doNotShowWalkthroughAfterInstall": true,
  "jupyter.askForKernelRestart": false,
  "notebook.lineNumbers": "on",
  "notebook.cellToolbarLocation": {
    "default": "right",
    "jupyter-notebook": "left"
  },
  /** Git settings */
  "git.confirmSync": false,
  "git.autofetch": true,
  "githubPullRequests.terminalLinksHandler": "github",
  "githubPullRequests.pullBranch": "never",
  /** Nix-specific settings */
  "nix.enableLanguageServer": true,
  "nix.formatterPath": "nixpkgs-fmt",
  "nix.serverPath": "nil",
  /** Lua-specific settings */
  "Lua.diagnostics.globals": ["vim"],
  "stylua.styluaPath": "/opt/homebrew/bin/stylua",
  "stylua.searchParentDirectories": true,
  /** Workbench-specific settings */
  "workbench.colorTheme": "Nord",
  "workbench.iconTheme": "city-lights-icons-vsc-light",
  "workbench.productIconTheme": "material-product-icons",
  "workbench.startupEditor": "newUntitledFile",
  "workbench.editorAssociations": {
    "*.ipynb": "jupyter-notebook"
  },
  /** (N)vim-specific settings */
  "vim.camelCaseMotion.enable": true,
  "vscode-neovim.neovimExecutablePaths.darwin": "/opt/homebrew/bin/nvim",
  /** AI-specific settings */
  "aws.codeWhisperer.shareCodeWhispererContentWithAWS": false,
  "aws.suppressPrompts": {
    "codeWhispererConnectionExpired": true
  },
  "github.copilot.enable": {
    "*": true
  },
  /** Telemetry settings */
  "telemetry.telemetryLevel": "off",
  "redhat.telemetry.enabled": false,
  "aws.telemetry": false,
  "gitlens.telemetry.enabled": false,
  /** Visual settings */
  "zenMode.hideTabs": false,
  "explorer.confirmDragAndDrop": false,
  "vsicons.dontShowNewVersionMessage": true,
  /** Terminal settings */
  "terminal.integrated.env.osx": {},
  /** Functional settings */
  "search.useGlobalIgnoreFiles": true,
  "emmet.includeLanguages": {
    "django-html": "html"
  },
  "projectManager.git.baseFolders": ["~/projects"],
  "direnv.path.executable": "/Users/mvshmakov/.asdf/shims/direnv",
  "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
  "security.workspace.trust.untrustedFiles": "open",
  /** Todo-tree settings */
  "todo-tree.regex.regex": "(//|#|<!--|;|/\\*|^|^\\s*(-|\\d+.))\\s*($TAGS)",
  "todo-tree.general.tags": [
    "BUG",
    "HACK",
    "FIXME",
    "TODO",
    "XXX",
    "[ ]",
    "[x]"
  ],
  /** cSpell settings */
  "cSpell.language": "en,ru",
  "cSpell.userWords": [
    "apos",
    "avif",
    "behaviour",
    "Brewfile",
    "codecov",
    "codemirror",
    "createadmin",
    "creds",
    "denormalized",
    "dotfiles",
    "evenodd",
    "googlecode",
    "hyperparameters",
    "IIAFE",
    "Immer",
    "isempty",
    "iterm",
    "Listbox",
    "memfs",
    "mvshmakov",
    "nondefault",
    "nondefaultname",
    "refactorings",
    "restow",
    "saschazar",
    "semibold",
    "Shmakov",
    "sonarjs",
    "sourcemaps",
    "Statoscope",
    "sudo",
    "telegraf",
    "Tensorboard",
    "upsert",
    "wasm",
    "yametrika"
  ],
  "totalTypeScript.hideAllTips": false,
  "totalTypeScript.hideBasicTips": true,
  "totalTypeScript.hiddenTips": [
    "passing-generics-to-types",
    "record-utility-type",
    "partial-utility-type",
    "pick-utility-type",
    "tuple-type",
    "type-alias-with-generics",
    "type-alias-with-multiple-generics",
    "never-keyword",
    "conditional-type",
    "nested-conditional-type",
    "returntype-utility-type",
    "keyof",
    "generic-slots-in-functions",
    "type-predicate",
    "typeof",
    "in-operator-narrowing",
    "as-const",
    "interface-with-generics",
    "omit-utility-type",
    "as-const-on-object",
    "mapped-type",
    "interface-with-multiple-generics",
    "exclude-utility-type",
    "infer",
    "bigint",
    "required-utility-type",
    "readonly-utility-type",
    "parameters-utility-type",
    "extract-utility-type",
    "nonnullable-utility-type",
    "awaited-utility-type"
  ],
  "[typescript]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint"
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint"
  },
  "diffEditor.ignoreTrimWhitespace": false,
  "[json]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "console-ninja.showWhatsNew": false,
  "dvc.doNotShowSetupAfterInstall": true,

  "javascript.inlayHints.enumMemberValues.enabled": true,
  "javascript.inlayHints.functionLikeReturnTypes.enabled": true,
  "javascript.inlayHints.parameterNames.enabled": "all",
  "javascript.inlayHints.parameterTypes.enabled": true,
  "javascript.inlayHints.propertyDeclarationTypes.enabled": true,

  "typescript.inlayHints.enumMemberValues.enabled": true,
  "typescript.inlayHints.functionLikeReturnTypes.enabled": true,
  "typescript.inlayHints.parameterNames.enabled": "all",
  "typescript.inlayHints.parameterTypes.enabled": true,
  "typescript.inlayHints.propertyDeclarationTypes.enabled": true,

  "python.analysis.inlayHints.callArgumentNames": "all",
  "python.analysis.inlayHints.functionReturnTypes": true,
  "python.analysis.inlayHints.pytestParameters": true,
  "python.analysis.inlayHints.variableTypes": true,

  "editor.inlayHints.padding": true,
  "Lua.hint.enable": true
}
